-- 1. Create schema first
CREATE OR REPLACE SCHEMA EDACONFIG;

-- 2. Create base tables (no foreign key dependencies)
CREATE OR REPLACE TABLE SYSTEMS (
	SYSTEM_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(50),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	UNIQUE (NAME),
	PRIMARY KEY (SYSTEM_ID)
);

CREATE OR REPLACE TABLE PROJECTS (
	PROJECT_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	UNIQUE (NAME),
	PRIMARY KEY (PROJECT_ID)
);

-- 3. Create tables that depend on SYSTEMS
CREATE OR REPLACE TABLE DATABASES (
	DATABASE_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	SYSTEM_ID VARCHAR(36) NOT NULL,
	UNIQUE (NAME),
	PRIMARY KEY (DATABASE_ID),
	CONSTRAINT FK_PUBLIC_DATABASE_SYSTEM_ID FOREIGN KEY (SYSTEM_ID) REFERENCES GTDEMO.EDACONFIG.SYSTEMS(SYSTEM_ID)
);

-- 4. Create tables that depend on DATABASES
CREATE OR REPLACE TABLE SCHEMAS (
	SCHEMA_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	DATABASE_ID VARCHAR(36) NOT NULL,
	UNIQUE (NAME),
	PRIMARY KEY (SCHEMA_ID),
	CONSTRAINT FK_PUBLIC_DATABASE_DATABASE_ID FOREIGN KEY (DATABASE_ID) REFERENCES GTDEMO.EDACONFIG.DATABASES(DATABASE_ID)
);

-- 5. Create tables that depend on SCHEMAS
CREATE OR REPLACE TABLE TABLES (
	TABLE_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	SCHEMA_ID VARCHAR(36) NOT NULL,
	UNIQUE (NAME),
	PRIMARY KEY (TABLE_ID),
	CONSTRAINT FK_PUBLIC_TABLE_TABLE_ID FOREIGN KEY (SCHEMA_ID) REFERENCES GTDEMO.EDACONFIG.SCHEMAS(SCHEMA_ID)
);

-- 6. Create tables that depend on TABLES
CREATE OR REPLACE TABLE COLUMNS (
	COLUMN_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(100),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	TABLE_ID VARCHAR(36) NOT NULL,
	UNIQUE (NAME),
	PRIMARY KEY (COLUMN_ID),
	CONSTRAINT FK_PUBLIC_COLUMN_TABLE_ID FOREIGN KEY (TABLE_ID) REFERENCES GTDEMO.EDACONFIG.TABLES(TABLE_ID)
);

-- 7. Create mapping tables (no foreign key constraints defined, so can be created after base tables)
CREATE OR REPLACE TABLE MAPPING_MASTER (
	MAPPING_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	PROJECT_ID VARCHAR(36),
	SOURCE_DATABASE_ID VARCHAR(255) NOT NULL,
	SOURCE_SCHEMA_ID VARCHAR(255) NOT NULL,
	SOURCE_TABLE_ID VARCHAR(255),
	DESTINATION_DATABASE_ID VARCHAR(255),
	DESTINATION_SCHEMA_ID VARCHAR(255),
	DESTINATION_OBJECT_NAME VARCHAR(255),
	DESTINATION_OBJECT_TYPE VARCHAR(20) DEFAULT 'View',
	DESRIPTION VARCHAR(100),
	IS_PUBLISHED BOOLEAN DEFAULT FALSE,
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	PRIMARY KEY (MAPPING_ID)
);

CREATE OR REPLACE TABLE MAPPING_COLUMNS (
	MAPPING_COLUMN_ID VARCHAR(36) NOT NULL DEFAULT UUID_STRING(),
	MAPPING_ID VARCHAR(36) NOT NULL,
	SOURCE_COLUMN_NAME VARCHAR(150),
	TARGET_COLUMN_NAME VARCHAR(150),
	DESRIPTION VARCHAR(150),
	INSERT_USER VARCHAR(50) DEFAULT CURRENT_USER(),
	INSERT_DATE_TIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	UPDATE_USER VARCHAR(50),
	UPDATE_DATE_TIME TIMESTAMP_NTZ(9),
	DELETE_USER VARCHAR(50),
	DELETE_DATE_TIME TIMESTAMP_NTZ(9),
	PROJECT_ID VARCHAR(36),
	PRIMARY KEY (MAPPING_COLUMN_ID)
);

-- 8. Create views (depend on tables)
CREATE OR REPLACE VIEW ST_EDA_VW_SYSTEMS(
	ID,
	NAME,
	DESCRITPTION
) AS
SELECT
    SYSTEM_ID AS ID,
    NAME AS NAME,
    DESCRIPTION AS DESCRITPTION
FROM
EDACONFIG.SYSTEMS;

CREATE OR REPLACE VIEW ST_EDA_VW_DATABASES(
	ID,
	NAME,
	DESCRIPTION,
	SYSTEM_ID
) AS
SELECT
    DATABASE_ID AS ID,
    NAME,
    DESCRIPTION,
    SYSTEM_ID
FROM EDACONFIG.DATABASES;

CREATE OR REPLACE VIEW ST_EDA_GET_VW_SCHEMAS(
	ID,
	NAME,
	DESCRIPTION
) AS
SELECT
    SCHEMA_ID AS ID,
    NAME,
    DESCRIPTION
FROM EDACONFIG.SCHEMAS;

CREATE OR REPLACE VIEW ST_EDA_VW_GET_TABLES(
	ID,
	NAME,
	DESCRIPTION,
	SCHEMA_ID
) AS
SELECT TABLE_ID, NAME, DESCRIPTION, SCHEMA_ID FROM TABLES;

CREATE OR REPLACE VIEW ST_EDA_VW_PROJECTS(
	ID,
	NAME,
	DESCRIPTION
) AS
SELECT PROJECT_ID AS ID, NAME, DESCRIPTION FROM EDACONFIG.PROJECTS;

CREATE OR REPLACE VIEW ST_EDA_GET_COLUMN_MAPPING(
	ID,
	TABLE_ID,
	MAPPING_ID,
	SOURCECOLUMN,
	TARGETCOLUMN,
	DESCRIPTION
) AS
SELECT 
    mc.MAPPING_COLUMN_ID AS ID, 
    c.TABLE_ID, 
    mc.MAPPING_ID,
    c.NAME AS SOURCECOLUMN, 
    mc.TARGET_COLUMN_NAME AS TARGETCOLUMN,
    mc.DESRIPTION AS DESCRIPTION
FROM 
    EDACONFIG.MAPPING_COLUMNS AS mc
JOIN 
    EDACONFIG.COLUMNS AS c ON mc.SOURCE_COLUMN_NAME = c.NAME;

CREATE OR REPLACE VIEW ST_EDA_VW_MAPPING_MASTER(
	MAPPING_ID,
	SOURCE_TABLE_ID,
	PROJECT_ID,
	SOURCE,
	TARGET,
	TARGETTYPE,
	IS_PUBLISHED,
	TARGETDB,
	TARGETSCHEMA,
	TARGETOBJECT
) AS
SELECT
mapping_id,
SOURCE_TABLE_ID,
PROJECT_ID,
dbSource.Name || '.' || ssource.Name || '.' || tsource.Name AS Source,
dbtarget.name || '.' || starget.Name || '.' || mm.destination_object_name AS Target,
mm.destination_object_type AS TargetType,
mm.is_published,
dbtarget.NAME AS TARGETDB,
Starget.Name AS TARGETSCHEMA,
mm.destination_object_name AS TARGETOBJECT
FROM Mapping_master mm
LEFT JOIN DATABASES DbSource ON mm.source_database_id = DBSOURCE.DATABASE_ID
LEFT JOIN Tables Tsource ON mm.source_table_id = Tsource.TABLE_ID
LEFT JOIN SCHEMAS SSource ON mm.source_SCHEMA_ID = ssource.SCHEMA_ID
LEFT JOIN DATABASES DbTarget ON mm.destination_database_id = DBtarget.DATABASE_ID
LEFT JOIN SCHEMAS STarget ON mm.destination_SCHEMA_ID = starget.SCHEMA_ID;

-- 9. Create stored procedures
CREATE OR REPLACE PROCEDURE "CREATE_MAPPING_MASTER"("PROJECTID" VARCHAR, "SOURCETABLE" VARCHAR)
RETURNS BOOLEAN
LANGUAGE SQL
EXECUTE AS OWNER
AS 'BEGIN
  INSERT INTO MAPPING_MASTER(PROJECT_ID,SOURCE_TABLE_ID)
  VALUES (:projectID,:SourceTable);
  RETURN True;
END';

CREATE OR REPLACE PROCEDURE "CREATE_MAPPING_MASTER"("PROJECTID" VARCHAR, "SOURCETABLE" VARCHAR, "DATABASEID" VARCHAR, "SCHEMAID" VARCHAR)
RETURNS BOOLEAN
LANGUAGE SQL
EXECUTE AS OWNER
AS 'BEGIN
  INSERT INTO MAPPING_MASTER(PROJECT_ID,SOURCE_TABLE_ID,SOURCE_DATABASE_ID,SOURCE_SCHEMA_ID)
  VALUES (:projectID,:SourceTable, :databaseid, :schemaID);
  RETURN True;
END';

CREATE OR REPLACE PROCEDURE "DELETE_MAPPING_COLUMN"("MAPPINGCOLUMNID" VARCHAR)
RETURNS BOOLEAN
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
    DELETE FROM EDACONFIG.MAPPING_COLUMNS WHERE MAPPING_COLUMN_ID = :MAPPINGCOLUMNID;
    RETURN TRUE;
END;
';

CREATE OR REPLACE PROCEDURE "INSERT_MAPPING_COLUMN"("MAPPINGID" VARCHAR, "SOURCECOLUMN" VARCHAR, "TARGETCOLUMN" VARCHAR, "DESCRIPTION" VARCHAR)
RETURNS BOOLEAN
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
    INSERT INTO EDACONFIG.MAPPING_COLUMNS (MAPPING_ID, SOURCE_COLUMN_NAME, TARGET_COLUMN_NAME, DESRIPTION)
    VALUES (:MAPPINGID, :SOURCECOLUMN, :TARGETCOLUMN, :DESCRIPTION);
    RETURN TRUE;
END;
';

CREATE OR REPLACE PROCEDURE "UPDATE_MAPPING_COLUMN"("MAPPINGCOLUMNID" VARCHAR, "TARGETCOLUMN" VARCHAR, "DESCRIPTION" VARCHAR)
RETURNS BOOLEAN
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
    UPDATE EDACONFIG.MAPPING_COLUMNS
    SET 
        TARGET_COLUMN_NAME = :TARGETCOLUMN,
        DESRIPTION = :DESCRIPTION,
        UPDATE_USER = CURRENT_USER(),
        UPDATE_DATE_TIME = CURRENT_TIMESTAMP()
    WHERE 
        MAPPING_COLUMN_ID = :MAPPINGCOLUMNID;
    RETURN TRUE;
END;
';

CREATE OR REPLACE PROCEDURE "UPDATE_MAPPING_MASTER"("MAPPINGID" VARCHAR, "TARGETDB" VARCHAR, "TARGETSCHEMA" VARCHAR, "TARGETOBJECT" VARCHAR, "OBJECTTYPE" VARCHAR)
RETURNS BOOLEAN
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
    UPDATE EDACONFIG.MAPPING_MASTER
    SET
        DESTINATION_DATABASE_ID = :TARGETDB,
        DESTINATION_SCHEMA_ID = :TARGETSCHEMA,
        DESTINATION_OBJECT_NAME = :TARGETOBJECT,
        DESTINATION_OBJECT_TYPE = :OBJECTTYPE,
        UPDATE_USER = CURRENT_USER(),
        UPDATE_DATE_TIME = CURRENT_TIMESTAMP()
    WHERE
        MAPPING_ID = :MAPPINGID;
    RETURN TRUE;
END;
';


-- Insert dummy data for SYSTEMS table
INSERT INTO EDACONFIG.SYSTEMS (SYSTEM_ID, NAME, DESCRIPTION) VALUES
('550e8400-e29b-41d4-a716-446655440001', 'Production System', 'Main production database system'),
('550e8400-e29b-41d4-a716-446655440002', 'Development System', 'Development environment system'),
('550e8400-e29b-41d4-a716-446655440003', 'Testing System', 'Quality assurance testing system'),
('550e8400-e29b-41d4-a716-446655440004', 'Staging System', 'Pre-production staging system'),
('550e8400-e29b-41d4-a716-446655440005', 'Analytics System', 'Data analytics and reporting system');

-- Insert dummy data for PROJECTS table
INSERT INTO EDACONFIG.PROJECTS (PROJECT_ID, NAME, DESCRIPTION) VALUES
('660e8400-e29b-41d4-a716-446655440001', 'Customer Analytics', 'Customer behavior analysis project'),
('660e8400-e29b-41d4-a716-446655440002', 'Sales Dashboard', 'Real-time sales monitoring dashboard'),
('660e8400-e29b-41d4-a716-446655440003', 'Inventory Management', 'Automated inventory tracking system'),
('660e8400-e29b-41d4-a716-446655440004', 'Financial Reporting', 'Monthly financial reports automation'),
('660e8400-e29b-41d4-a716-446655440005', 'HR Analytics', 'Employee performance analytics');

-- Insert dummy data for DATABASES table
INSERT INTO EDACONFIG.DATABASES (DATABASE_ID, NAME, DESCRIPTION, SYSTEM_ID) VALUES
('770e8400-e29b-41d4-a716-446655440001', 'PROD_DB', 'Production database', '550e8400-e29b-41d4-a716-446655440001'),
('770e8400-e29b-41d4-a716-446655440002', 'DEV_DB', 'Development database', '550e8400-e29b-41d4-a716-446655440002'),
('770e8400-e29b-41d4-a716-446655440003', 'TEST_DB', 'Testing database', '550e8400-e29b-41d4-a716-446655440003'),
('770e8400-e29b-41d4-a716-446655440004', 'STAGE_DB', 'Staging database', '550e8400-e29b-41d4-a716-446655440004'),
('770e8400-e29b-41d4-a716-446655440005', 'ANALYTICS_DB', 'Analytics database', '550e8400-e29b-41d4-a716-446655440005');

-- Insert dummy data for SCHEMAS table
INSERT INTO EDACONFIG.SCHEMAS (SCHEMA_ID, NAME, DESCRIPTION, DATABASE_ID) VALUES
('880e8400-e29b-41d4-a716-446655440001', 'SALES', 'Sales related data schema', '770e8400-e29b-41d4-a716-446655440001'),
('880e8400-e29b-41d4-a716-446655440002', 'CUSTOMER', 'Customer information schema', '770e8400-e29b-41d4-a716-446655440001'),
('880e8400-e29b-41d4-a716-446655440003', 'INVENTORY', 'Inventory management schema', '770e8400-e29b-41d4-a716-446655440002'),
('880e8400-e29b-41d4-a716-446655440004', 'FINANCE', 'Financial data schema', '770e8400-e29b-41d4-a716-446655440003'),
('880e8400-e29b-41d4-a716-446655440005', 'HR', 'Human resources schema', '770e8400-e29b-41d4-a716-446655440004');

-- Insert dummy data for TABLES table
INSERT INTO EDACONFIG.TABLES (TABLE_ID, NAME, DESCRIPTION, SCHEMA_ID) VALUES
('990e8400-e29b-41d4-a716-446655440001', 'ORDERS', 'Customer orders table', '880e8400-e29b-41d4-a716-446655440001'),
('990e8400-e29b-41d4-a716-446655440002', 'CUSTOMERS', 'Customer master data', '880e8400-e29b-41d4-a716-446655440002'),
('990e8400-e29b-41d4-a716-446655440003', 'PRODUCTS', 'Product catalog table', '880e8400-e29b-41d4-a716-446655440003'),
('990e8400-e29b-41d4-a716-446655440004', 'TRANSACTIONS', 'Financial transactions', '880e8400-e29b-41d4-a716-446655440004'),
('990e8400-e29b-41d4-a716-446655440005', 'EMPLOYEES', 'Employee information', '880e8400-e29b-41d4-a716-446655440005');

-- Insert dummy data for COLUMNS table
INSERT INTO EDACONFIG.COLUMNS (COLUMN_ID, NAME, DESCRIPTION, TABLE_ID) VALUES
('aa0e8400-e29b-41d4-a716-446655440001', 'ORDER_ID', 'Unique order identifier', '990e8400-e29b-41d4-a716-446655440001'),
('aa0e8400-e29b-41d4-a716-446655440002', 'CUSTOMER_ID', 'Customer identifier', '990e8400-e29b-41d4-a716-446655440001'),
('aa0e8400-e29b-41d4-a716-446655440003', 'ORDER_DATE', 'Date when order was placed', '990e8400-e29b-41d4-a716-446655440001'),
('aa0e8400-e29b-41d4-a716-446655440004', 'TOTAL_AMOUNT', 'Total order amount', '990e8400-e29b-41d4-a716-446655440001'),
('aa0e8400-e29b-41d4-a716-446655440005', 'ORDER_STATUS', 'Current status of the order', '990e8400-e29b-41d4-a716-446655440001'),
('aa0e8400-e29b-41d4-a716-446655440006', 'CUSTOMER_NAME', 'Full name of customer', '990e8400-e29b-41d4-a716-446655440002'),
('aa0e8400-e29b-41d4-a716-446655440007', 'EMAIL', 'Customer email address', '990e8400-e29b-41d4-a716-446655440002'),
('aa0e8400-e29b-41d4-a716-446655440008', 'PHONE', 'Customer phone number', '990e8400-e29b-41d4-a716-446655440002'),
('aa0e8400-e29b-41d4-a716-446655440009', 'ADDRESS', 'Customer address', '990e8400-e29b-41d4-a716-446655440002'),
('aa0e8400-e29b-41d4-a716-446655440010', 'REGISTRATION_DATE', 'Customer registration date', '990e8400-e29b-41d4-a716-446655440002'),
('aa0e8400-e29b-41d4-a716-446655440011', 'PRODUCT_ID', 'Unique product identifier', '990e8400-e29b-41d4-a716-446655440003'),
('aa0e8400-e29b-41d4-a716-446655440012', 'PRODUCT_NAME', 'Name of the product', '990e8400-e29b-41d4-a716-446655440003'),
('aa0e8400-e29b-41d4-a716-446655440013', 'CATEGORY', 'Product category', '990e8400-e29b-41d4-a716-446655440003'),
('aa0e8400-e29b-41d4-a716-446655440014', 'PRICE', 'Product price', '990e8400-e29b-41d4-a716-446655440003'),
('aa0e8400-e29b-41d4-a716-446655440015', 'STOCK_QUANTITY', 'Available stock quantity', '990e8400-e29b-41d4-a716-446655440003'),
('aa0e8400-e29b-41d4-a716-446655440016', 'TRANSACTION_ID', 'Unique transaction identifier', '990e8400-e29b-41d4-a716-446655440004'),
('aa0e8400-e29b-41d4-a716-446655440017', 'AMOUNT', 'Transaction amount', '990e8400-e29b-41d4-a716-446655440004'),
('aa0e8400-e29b-41d4-a716-446655440018', 'TRANSACTION_DATE', 'Date of transaction', '990e8400-e29b-41d4-a716-446655440004'),
('aa0e8400-e29b-41d4-a716-446655440019', 'TRANSACTION_TYPE', 'Type of transaction', '990e8400-e29b-41d4-a716-446655440004'),
('aa0e8400-e29b-41d4-a716-446655440020', 'ACCOUNT_ID', 'Associated account identifier', '990e8400-e29b-41d4-a716-446655440004'),
('aa0e8400-e29b-41d4-a716-446655440021', 'EMPLOYEE_ID', 'Unique employee identifier', '990e8400-e29b-41d4-a716-446655440005'),
('aa0e8400-e29b-41d4-a716-446655440022', 'FIRST_NAME', 'Employee first name', '990e8400-e29b-41d4-a716-446655440005'),
('aa0e8400-e29b-41d4-a716-446655440023', 'LAST_NAME', 'Employee last name', '990e8400-e29b-41d4-a716-446655440005'),
('aa0e8400-e29b-41d4-a716-446655440024', 'DEPARTMENT', 'Employee department', '990e8400-e29b-41d4-a716-446655440005'),
('aa0e8400-e29b-41d4-a716-446655440025', 'HIRE_DATE', 'Employee hire date', '990e8400-e29b-41d4-a716-446655440005');


